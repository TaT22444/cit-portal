---
---

<section class="box" id="H_chat">
  <h3 class="help_section_title chat">
    <span id="help_section_number" style="display: none;">0.</span>
    <span id="help_section_title">チャットボット</span>
  </h3>
  <!-- <p class="help_section_desc">チャットボットについての説明をここに書きます。ここに書きます。</p> -->
  <div class="chat_contents">
    <nav class="nav">
      <ul class="nav_list">
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">学生生活について</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">修学関係について</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">奨学金について</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">試験・資格</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">行事・学年歴</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">学生食堂</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">奨学金について</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">バスダイヤ</p>
          </button>
        </li>
        <li class="nav_item">
          <button class="nav_btn">
            <p class="nav_label">その他</p>
          </button>
        </li>
      </ul>
    </nav>
    <div class="chat_box">
      <div class="chat_box_inner">
        <ul class="chat_list">
          <li class="chat_item">
            <p class="chat_text">
              こんにちは！チャットボットです。
              <br>心配事やわからないことがありましたら、左の項目から、もしくはテキストで打ち込んでいただければ回答いたします！
            </p>
          </li>
          <li class="chat_item">
            <p class="chat_text" id="answer"></p>
          </li>
          <!-- <li class="chat_item user">
            <p class="chat_text user">ここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入ります</p>
          </li>
          <li class="chat_item">
            <p class="chat_text">ここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入ります</p>
          </li>
          <li class="chat_item user">
            <p class="chat_text user">ここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入りますここにチャットの内容が入ります</p>
          </li> -->
        </ul>
      </div>
      <div class="chat_input_box">
        <div class="chat_input_inner">
          <input type="text" class="chat_input" id="question" placeholder="質問を入力" >
          <button id="submit" type="submit" class="chat_btn">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M13.9999 10.0002L10.9999 13.0002M20.2879 3.03122C20.3828 2.99847 20.4849 2.99309 20.5827 3.01567C20.6806 3.03825 20.77 3.0879 20.841 3.15893C20.9119 3.22996 20.9614 3.31952 20.9838 3.41736C21.0063 3.5152 21.0007 3.61738 20.9679 3.71222L15.0439 20.6422C15.0084 20.7434 14.9434 20.8316 14.8572 20.8954C14.771 20.9592 14.6676 20.9956 14.5605 20.9999C14.4533 21.0042 14.3473 20.9763 14.2563 20.9196C14.1652 20.863 14.0933 20.7802 14.0499 20.6822L10.8309 13.4402C10.7767 13.3198 10.6803 13.2234 10.5599 13.1692L3.31786 9.94922C3.22016 9.9056 3.13778 9.83368 3.08137 9.74275C3.02495 9.65183 2.9971 9.54608 3.00141 9.43917C3.00572 9.33225 3.04198 9.22909 3.10553 9.14299C3.16907 9.0569 3.25697 8.99184 3.35786 8.95622L20.2879 3.03122Z" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>          
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .box{
    margin-top: 40px;
    // padding-top: 32px;
    // border-top: 1px solid #dadae3;

    >.chat{
      margin-inline: auto;
    }
  }

  .help_section_title{
    font-size: 20px;
    color: #252528;
    font-weight: 500;
  }

  .help_section_desc{
    margin-top: 16px;
    font-size: 12px;
  }

  .chat{

    &_contents{
      display: flex;
      width: 100%;
      gap: 16px;
      margin-top: 40px;
    }

    &_box{
      position: relative;
      width: 100%;
      height: 100%;
      border: 1px solid #dadae3;
      
      border-radius: 24px;
      display: flex;
      justify-content: center;

      &_inner{
        width: 100%;
        position: relative;
        padding: 24px 20px;
      }
    }

    &_list{
      display: flex;
      flex-direction: column;
      gap: 24px;
      padding-bottom: 120px;

      >.user{
        max-width: 98%;
        background-color: #e6e6ea;
        padding: 16px 20px;
        margin-left: auto;

        &::before{
          position: relative;
          content: "あなた";
          font-size: 12px;
          color: #66666d;
        }
      }
    }

    &_item{
      max-width: 100%;
      border-radius: 16px;

      >.user{
        font-size: 12px;
        margin-top: 8px;
      }
    }

    &_text{
      font-size: 14px;
      line-height: 1.6;
    }

    &_input_box{
      width: calc(100% - 32px);
      position: absolute;
      bottom: 24px;
      padding-inline: 16px;
    }

    &_input_inner{
      display: flex;
      align-items: center;
      padding: 16px 24px;
      border: 1px solid #dadae3;
      border-radius: 100px;
      box-shadow: 0px 0px 16px rgba($color: #252528, $alpha: 0.15);
    }

    &_input{
      flex: 1;
      font-size: 14px;
    }
  }

  .nav{
    width: 320px;

    &_list{
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    &_item{
      border-radius: 16px;
      // border: 1px solid #dadae3;
      // box-shadow: 0px 0px 16px rgba($color: #252528, $alpha: 0.1);
    }

    &_btn{
      width: 100%;
      padding: 16px 24px;
      border-radius: 16px;
      font-weight: 400;
      color: #252528;
      background-color: #fff;
      border: 1px solid #dadae3;
    }

    &_label{
      font-size: 12px;
    }
  }

  .dis-none{
    display: none;
  }
  .dis-flex{
    display: flex;
  }
</style>

<script>
  import { GoogleGenerativeAI } from "@google/generative-ai";
import universityData from "../data/university_data.json";

const API_KEY = import.meta.env.PUBLIC_GEMINI_API_KEY;

// Google Generative AIのインスタンスを作成
const genAI = new GoogleGenerativeAI(API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

// 会話履歴を保持する配列
const conversationHistory: { question: string; answer: string }[] = [];

const qu = document.getElementById("question");
const submit = document.getElementById("submit");
const answer = document.getElementById("answer");

submit?.addEventListener("click", async () => {
  if (qu instanceof HTMLInputElement) {
    const userQuestion = qu.value; // 入力値を取得


    // JSONデータから大学情報をプロンプトに追加
    const universityContext = `
      大学名: ${universityData.university_name}
      ポータルURL: ${universityData.portal_url}
      問い合わせメール: ${universityData.contact_email}
      利用可能な機能: ${universityData.features.join(", ")}
      よくある質問: ${universityData.faq
        .map((faq) => `Q: ${faq.question}\nA: ${faq.answer}`)
        .join("\n")}
    `;

		const ai_setting = `
		  役: ${universityData.role}
			口調: ${universityData.tone}
			回答する内容: ${universityData.range}
		`;

    // 会話履歴をコンテキストに含める
    const conversationContext = conversationHistory
      .map(
        (entry, index) =>
          `Q${index + 1}: ${entry.question}\nA${index + 1}: ${entry.answer}`
      )
      .join("\n");

    // プロンプトを組み立てる
    const fullPrompt = `
      以下は大学ポータルサイトに関する情報です。この情報に基づいて、以下の質問に答えてください:
      情報:
      ${universityContext}
			${ai_setting}

      過去の会話:
      ${conversationContext}

      質問: ${userQuestion}
      答え:
    `;

		console.log(fullPrompt)

    try {
      // APIリクエスト
      const result = await model.generateContent(fullPrompt);
      const response = await result.response;
      const text = await response.text();

      // 応答を履歴に追加
      conversationHistory.push({ question: userQuestion, answer: text });

      // コンソール表示および画面更新
      console.log(text);
      if (answer) {
        answer.innerText = text;
      }
    } catch (error) {
      console.error("エラーが発生しました:", error);
      if (answer) {
        answer.innerText = "エラーが発生しました。もう一度お試しください。";
      }
    }
  }
});
</script>
